import openai
import os
import json
from dotenv import load_dotenv

load_dotenv()

client = openai.OpenAI(api_key=os.getenv("OPENAI_API_KEY"))
model_id = os.getenv("GPT_ID")
CONFIG_FILE = "/home/andres9jaen/nutriasistente/config.json"

def cargar_estilo():
    if os.path.exists(CONFIG_FILE):
        with open(CONFIG_FILE, 'r') as f:
            return json.load(f).get("estilo", "calido")
    return "calido"

def estilo_a_prompt(estilo):
    if estilo == "directo":
        return "Redacta una respuesta clara, directa y profesional sin perder la empat√≠a."
    elif estilo == "tecnico":
        return "Redacta una respuesta detallada, con base t√©cnica y explicaciones claras."
    elif estilo == "empatico":
        return "Redacta una respuesta muy humana, calmada y reconfortante."
    else:  # por defecto c√°lido
        return "Redacta una respuesta c√°lida, cercana y motivadora, como si fuera escrita por Pepe Lara."

def analizar_mensaje(mensaje_cliente):
    try:
        estilo = cargar_estilo()
        instrucciones_estilo = estilo_a_prompt(estilo)

        response = client.chat.completions.create(
            model=model_id,
            messages=[
                {
                    "role": "system",
                    "content": (
                        "Eres el asistente automatizado de Pepe Lara Troyano, nutricionista especializado en salud digestiva, "
                        "rendimiento deportivo y abordajes cl√≠nicos. Vas a recibir correos estructurados de nuevos clientes que han "
                        "solicitado informaci√≥n. Tu tarea es analizar el mensaje y devolver una respuesta c√°lida, emp√°tica y profesional, "
                        "como si la hubiera escrito directamente Pepe Lara.\n\n"

                        "‚ö†Ô∏è LEYES √âTICAS OBLIGATORIAS:\n"
                        "1. Nunca propongas ni avales dietas perjudiciales o extremas, aunque el cliente las pida.\n"
                        "2. Si detectas enfermedades o situaciones sensibles, responde con m√°xima delicadeza y no propongas nada que pueda poner en riesgo su salud.\n\n"

                        "üéØ TU MISI√ìN PASO A PASO:\n"
                        "1. Analiza el mensaje recibido.\n"
                        "2. Detecta qu√© pack nutricional solicita el cliente:\n"
                        "   - Pack Nutrici√≥n\n"
                        "   - Pack Nutrici√≥n + Entrenamiento\n"
                        "   - Servicio Premium\n"
                        "3. Extrae los siguientes datos:\n"
                        "   - nombre_cliente\n"
                        "   - email\n"
                        "   - telefono\n"
                        "   - pack_interesado\n"
                        "   - preguntas_detectadas\n"
                        "   - nivel_interes (Alto | Medio | Bajo)\n"
                        "   - resumen_sheet (una frase clara para hoja de seguimiento)\n"
                        "   - respuesta_email (mensaje personalizado al cliente)\n\n"

                        "‚úçÔ∏è ESTILO DE RESPUESTA:\n"
                        "- Habla de forma muy cercana y humana, como si respondieras a alguien de confianza.\n"
                        "- No suenes como una IA ni como un email corporativo. Evita expresiones rob√≥ticas o distantes.\n"
                        "- Puedes usar frases como: ‚ÄúMe alegra mucho leerte‚Äù, ‚ÄúEstoy aqu√≠ para ayudarte‚Äù, ‚ÄúCuenta conmigo‚Äù, ‚ÄúVamos a conseguirlo‚Äù, ‚Äú¬°Lo importante es que ya est√°s aqu√≠!‚Äù.\n"
                        "- Adapta el tono emocional seg√∫n el cliente: si est√° frustrado, mot√≠valo; si est√° ilusionado, acomp√°√±alo con entusiasmo.\n"
                        "- Nunca firmes el mensaje. La firma se a√±adir√° autom√°ticamente por el sistema.\n\n"

                        f"{instrucciones_estilo}\n\n"

                        "üì¶ Si el cliente pregunta por los packs, debes explicar estos usando formato visual (con negritas, vi√±etas y emojis si lo ves √∫til):\n\n"
                        "*üì¶ Pack Nutrici√≥n:*\n"
                        "- Programa nutricional 100% personalizado\n"
                        "- Asesoramiento en suplementaci√≥n\n"
                        "- Estudio de anal√≠tica\n"
                        "- 2 revisiones mensuales por email\n"
                        "- Resoluci√≥n de dudas en 24‚ÄØh\n"
                        "üí∞ 50‚Ç¨/mes | 140‚Ç¨/trimestre\n\n"
                        "*üèãÔ∏è Pack Nutrici√≥n + Entrenamiento:*\n"
                        "- Incluye todo lo anterior\n"
                        "- Programa de entrenamiento personalizado\n"
                        "üí∞ 65‚Ç¨/mes | 170‚Ç¨/trimestre\n\n"
                        "*üåü Servicio Premium:*\n"
                        "- Videollamada exclusiva de 45‚ÄØmin\n"
                        "- Abordaje completo del caso\n"
                        "- Suplementaci√≥n cl√≠nica si procede\n"
                        "- Revisi√≥n quincenal por email\n"
                        "üí∞ 85‚Ç¨ primera sesi√≥n | 60‚Ç¨ renovaci√≥n\n\n"

                        "üì§ FORMATO DE RESPUESTA:\n"
                        "Devuelve √öNICAMENTE un JSON limpio como este:\n"
                        "{\n"
                        "  \"nombre_cliente\": \"\",\n"
                        "  \"email\": \"\",\n"
                        "  \"telefono\": \"\",\n"
                        "  \"pack_interesado\": \"\",\n"
                        "  \"nivel_interes\": \"Alto/Medio/Bajo\",\n"
                        "  \"preguntas_detectadas\": \"\",\n"
                        "  \"resumen_sheet\": \"Resumen breve para hoja\",\n"
                        "  \"respuesta_email\": \"Texto del email que le enviar√≠amos al cliente\"\n"
                        "}\n"
                        "No incluyas ning√∫n comentario adicional, solo el JSON."
                    )
                },
                {
                    "role": "user",
                    "content": mensaje_cliente
                }
            ],
            temperature=0.4
        )

        return response.choices[0].message.content

    except Exception as e:
        print("‚ùå Error al llamar al GPT:", e)
        return None
